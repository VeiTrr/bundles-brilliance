plugins {
	id 'dev.architectury.loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version + "-v" + project.minecraft_version
group = project.maven_group

base {
	archivesName = project.archives_base_name + "-neoforge"
}

repositories {
	maven {
		name = 'NeoForged'
		url = 'https://maven.neoforged.net/releases'
	}

	maven {
		url "https://maven.su5ed.dev/releases"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		it.mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
		it.mappings("dev.architectury:yarn-mappings-patch-neoforge:${project.yarn_mappings_patch_version}")
	}
	neoForge "net.neoforged:neoforge:${project.neoforge_version}"

	modImplementation "org.sinytra.forgified-fabric-api:forgified-fabric-api:${project.forgified_fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching('META-INF/neoforge.mods.toml') {
		expand version: project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name + "-neoforge"
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}